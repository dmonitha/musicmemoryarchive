// <auto-generated />
using MMADatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MMADatabase.Migrations
{
    [DbContext(typeof(MusicMemoryArchiveContext))]
    [Migration("20231013183525_Ratings")]
    partial class Ratings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MMADatabase.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("NumberOfSongs")
                        .HasColumnType("int")
                        .HasColumnName("Number of Songs");

                    b.Property<int>("YearOfRelease")
                        .HasColumnType("int")
                        .HasColumnName("Year of Release");

                    b.HasKey("Id");

                    b.ToTable("Album", (string)null);
                });

            modelBuilder.Entity("MMADatabase.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int")
                        .HasColumnName("Album ID");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("FeaturingArtist")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Featuring Artist");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Song Name");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Song", (string)null);
                });

            modelBuilder.Entity("MMADatabase.Song", b =>
                {
                    b.HasOne("MMADatabase.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .IsRequired()
                        .HasConstraintName("FK_Song_Album");

                    b.Navigation("Album");
                });

            modelBuilder.Entity("MMADatabase.Album", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
